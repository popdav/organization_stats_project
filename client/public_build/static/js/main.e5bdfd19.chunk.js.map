{"version":3,"sources":["Components/Project.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Project","className","this","props","element","name","city","street","country","deleted","package","paid","React","Component","App","refresh","a","axios","post","state","searchBody","res","console","log","data","avg","ptime","count","area","get","heartbeat","setState","projects","searchClicked","page","avgSmartTag","processingTime","projectCount","totalArea","handleSelectOrganization","e","selectedOrganization","target","value","JSON","parse","handleSelectProjectType","body","all","finished","unfinished","projectsType","handleSelectProjectSub","unpaid","projectsSub","handleClickRefresh","inteval","alert","clearInterval","interval","setInterval","refreshRate","handleClickSearch","organizationName","handleClickPrevous","window","scrollTo","handleClickNext","length","componentDidMount","organizations","componentWillUnmount","live","style","marginLeft","marginRight","htmlFor","id","onChange","map","i","stringify","type","checked","onClick","role","toFixed","Math","floor","avgProcessingTIme","multiple","disabled","_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5bdfd19.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css';\r\n\r\nclass Project extends React.Component {\r\n  \r\n\r\n  render() {\r\n    return (\r\n    <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          Name: {this.props.element.name} <br/>\r\n          City: {this.props.element.city} <br/>\r\n          Street: {this.props.element.street} <br/>\r\n          Country: {this.props.element.country} <br/>\r\n          Deleted: {this.props.element.deleted ? 'yes' : 'no'} <br/>\r\n          Package: {this.props.element.package} <br/>\r\n          Paid: {this.props.element.paid ? 'yes' : 'no'} <br/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","import React from 'react'\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Project from './Project';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      refreshRate: 1000*60,\n      organizations: [],\n      projects: [],\n      selectedOrganization: '',\n      projectsType: {all: true, finished: false, unfinished: false},\n      projectsSub: {all: true, paid: false, unpaid: false},\n      page: 1,\n      searchBody: {},\n      searchClicked: false,\n      avgSmartTag: {},\n      processingTime: {},\n      projectCount: [],\n      totalArea: [],\n      inteval: null,\n      heartbeat: {live: false}\n    }\n  }\n\n  refresh = async () => {\n    try {\n\n      let res = await axios.post('/projects', this.state.searchBody);\n      console.log(res.data); \n      let avg = await axios.post('/smarttag', this.state.searchBody);\n      console.log(avg)\n      let ptime = await axios.post('/processingtime', this.state.searchBody);\n      console.log(ptime)\n      let count = await axios.post('/projectcount', this.state.searchBody);\n      console.log(count)\n      let area = await axios.post('/totalarea', this.state.searchBody);\n      console.log(area)\n      \n      let heartbeat = await axios.get('/checkworker');\n      console.log(heartbeat);\n\n      this.setState({\n        projects: res.data,\n        searchClicked: true, \n        page: 1,\n        avgSmartTag: avg.data[0],\n        processingTime: ptime.data[0],\n        projectCount: count.data,\n        totalArea: area.data,\n        heartbeat: heartbeat.data\n      });\n\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  handleSelectOrganization = (e) => {\n    this.setState({selectedOrganization: e.target.value !== '' ? JSON.parse(e.target.value) : ''});\n  };\n\n  handleSelectProjectType = (e) => {\n    let body = {all: false, finished: false, unfinished: false};\n    body[e.target.value] = true;\n    this.setState({projectsType: body});\n  };\n\n  handleSelectProjectSub = (e) => {\n    let body = {all: false, paid: false, unpaid: false};\n    body[e.target.value] = true;\n    this.setState({projectsSub: body});\n  };\n\n  handleClickRefresh = async () => {\n    if (this.state.inteval === null) {\n      alert('You need to search before refreshing');\n      return;\n    }\n    clearInterval(this.state.inteval);\n    await this.refresh();\n    this.setState({interval: setInterval(this.refresh, this.state.refreshRate)});\n  }\n\n  handleClickSearch = async () => {\n    \n    let body = {\n      organizationName: this.state.selectedOrganization,\n      projectsType: this.state.projectsType,\n      projectsSub: this.state.projectsSub,\n      page: 1\n    }\n\n    console.log(body)\n    try {\n\n      let res = await axios.post('/projects', body);\n      console.log(res.data); \n      let avg = await axios.post('/smarttag', body);\n      console.log(avg)\n      let ptime = await axios.post('/processingtime', body);\n      console.log(ptime)\n      let count = await axios.post('/projectcount', body);\n      console.log(count)\n      let area = await axios.post('/totalarea', body);\n      console.log(area)\n      let heartbeat = await axios.get('/checkworker');\n      console.log(heartbeat);\n\n      this.setState({\n        projects: res.data, \n        searchBody: body, \n        searchClicked: true, \n        page: 1,\n        avgSmartTag: avg.data[0],\n        processingTime: ptime.data[0],\n        projectCount: count.data,\n        totalArea: area.data,\n        heartbeat: heartbeat.data,\n        inteval: setInterval(this.refresh, this.state.refreshRate),\n      });\n\n    }\n    catch(err) {\n      console.log(err);\n    }\n  };\n\n  handleClickPrevous = async () => {\n    if (this.state.page === 1) {\n      alert('You are on page 1');\n      return;\n    }\n\n    let body = {\n      organizationName: this.state.selectedOrganization,\n      projectsType: this.state.projectsType,\n      projectsSub: this.state.projectsSub,\n      page: this.state.page-1\n    }\n\n    console.log(body)\n    try {\n\n      let res = await axios.post('/projects', body);\n      console.log(res.data);\n      this.setState({\n        projects: res.data, \n        searchBody: body, \n        searchClicked: true, \n        page: this.state.page-1\n      });\n      window.scrollTo(0, 0);\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  handleClickNext = async () => {\n\n    let body = {\n      organizationName: this.state.selectedOrganization,\n      projectsType: this.state.projectsType,\n      projectsSub: this.state.projectsSub,\n      page: this.state.page+1\n    }\n\n    console.log(body)\n    try {\n\n      let res = await axios.post('/projects', body);\n      console.log(res.data);\n      if(res.data.length === 0) {\n        alert('There is no next page');\n        return;\n      }\n      this.setState({\n        projects: res.data, \n        searchBody: body, \n        searchClicked: true, \n        page: this.state.page+1\n      });\n      window.scrollTo(0, 0);\n\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n    componentDidMount = async () => {\n\n    try {\n\n      let res = await axios.get('/organizations');\n      console.log(res.data);\n      this.setState({organizations: res.data})\n\n    }\n    catch(err) {\n      console.log(err);\n    }\n\n  }\n\n  componentWillUnmount = async () => {\n    clearInterval(this.state.inteval);\n    this.setState({interval: null});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <br/>\n        <form style={{marginLeft: \"20%\", marginRight: \"20%\"}}>\n          <div className=\"form-group\">\n            <label htmlFor=\"organizations\">Select organization:</label>\n            <select className=\"form-control\" id=\"organizations\" onChange={this.handleSelectOrganization}>\n              <option value=''></option>\n              {this.state.organizations.map((e, i) => {\n                return (\n                  <option key={i} value={JSON.stringify(e)} >{e.organizationName}</option>\n                )\n              })}\n            </select>\n          </div>\n\n          <div className='d-flex justify-content-between'>\n            <div className='form-group'>\n              <label>Select projects type:</label>\n            </div>\n            <div className=\"form-check\">\n              <input className=\"form-check-input\" type=\"radio\"  id=\"allType\" value=\"all\" \n                     checked={this.state.projectsType.all}\n                     onChange={this.handleSelectProjectType}/>\n              <label className=\"form-check-label\" htmlFor=\"allType\">\n                All\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input className=\"form-check-input\" type=\"radio\"  id=\"finished\" value=\"finished\" \n                     checked={this.state.projectsType.finished} \n                     onChange={this.handleSelectProjectType}/>\n              <label className=\"form-check-label\" htmlFor=\"finished\">\n                Finished projects\n              </label>\n            </div>\n            <div className=\"form-check disabled\">\n              <input className=\"form-check-input\" type=\"radio\"  id=\"unfinished\" value=\"unfinished\" \n                     checked={this.state.projectsType.unfinished} \n                     onChange={this.handleSelectProjectType}/>\n              <label className=\"form-check-label\" htmlFor=\"unfinished\">\n                Unfinished projects\n              </label>\n            </div>\n          </div>\n\n          <div className='d-flex justify-content-between'>\n            <div className='form-group'>\n              <label>Select projects subscription:</label>\n            </div>\n            <div className=\"form-check\">\n              <input className=\"form-check-input\" type=\"radio\"  id=\"allSub\" value=\"all\" \n                     checked={this.state.projectsSub.all}\n                     onChange={this.handleSelectProjectSub}/>\n              <label className=\"form-check-label\" htmlFor=\"allSub\">\n                All\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input className=\"form-check-input\" type=\"radio\"  id=\"paid\" value=\"paid\" \n                     checked={this.state.projectsSub.paid}\n                     onChange={this.handleSelectProjectSub}/>\n              <label className=\"form-check-label\" htmlFor=\"paid\">\n                Paid projects\n              </label>\n            </div>\n            <div className=\"form-check disabled\">\n              <input className=\"form-check-input\" type=\"radio\"  id=\"unpaid\" value=\"unpaid\" \n                     checked={this.state.projectsSub.unpaid}\n                     onChange={this.handleSelectProjectSub}/>\n              <label className=\"form-check-label\" htmlFor=\"unpaid\">\n                Unpaid projects\n              </label>\n            </div>\n          </div>\n          <div className='d-flex justify-content-between'>\n            <div className='btn btn-primary' onClick={this.handleClickSearch}>Search</div>\n            <div className='btn btn-primary' onClick={this.handleClickRefresh}>Refresh</div>\n          </div>\n        </form>\n        <br/>\n        <div style={{marginLeft: \"20%\", marginRight: \"20%\"}}>\n        {this.state.searchClicked && !this.state.heartbeat.live ? (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            Worker is down!\n          </div>)\n          : ''\n          }\n        {this.state.searchClicked ? (\n          <div className='card'>\n            <div>Page: {this.state.page}</div>\n            <div>Project count: {this.state.projects.length}</div>\n            <div>Average count of smartTags per project: {this.state.avgSmartTag.avgSmartTag.toFixed(3)}</div>\n            <div>Average project processing time: {Math.floor(this.state.processingTime.avgProcessingTIme / 60000)} min {((this.state.processingTime.avgProcessingTIme % 60000) / 1000).toFixed(0)} sec</div>\n            <br />\n            <div>Project count for each scanner:</div>\n            <select multiple disabled className=\"form-control\" id=\"exampleFormControlSelect2\">\n              {this.state.projectCount.map((e, i) => {\n                return (\n                <option key={i}>scanner id: {e._id === null ? 'None' : e._id}, count: {e.count}</option>\n                )\n              })}\n            </select>\n            <br />\n            <div>Total area scanned by the organization:</div>\n            <select multiple disabled className=\"form-control\" id=\"exampleFormControlSelect2\">\n              {this.state.totalArea.map((e, i) => {\n                return (\n                <option key={i}>organization id: {e._id === null ? 'None' : e._id}, count: {e.count.toFixed(3)}</option>\n                )\n              })}\n            </select>\n            <br />\n          </div>\n        ) : ''}\n        <br />\n        {this.state.projects.map((e, i) => {\n          return (\n            <div key={e._id}>\n              <Project  element={e}/>\n              <br/>\n            </div>\n          )\n        })}\n\n        {this.state.searchClicked ? (<nav>\n          <ul className=\"pagination\">\n            <li className=\"page-item\" onClick={this.handleClickPrevous}><div className=\"page-link\">Previous</div></li>\n            <li className=\"page-item\" onClick={this.handleClickNext}><div className=\"page-link\">Next</div></li>\n          </ul>\n        </nav>) : ''}\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}